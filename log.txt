.LOG

7:32 PM 27-Nov-17
This is my log file to report the things I do in my Image Recognition Project.This is nothing but a "Hello World" Program in the Machine Learning World.
I'm creating v1 using only a simple "Logistic Regression and One vs All Classification".I'm expecting accuracy of ~90% or less.

The code name of this project is "IMGRG".

Details are as follows;
{File Names}
[Final_Program.py]- A python 3.6 program to just gather the pixels of the Grayscale Images and convert them to pixels and store them in [IMGRG_data.txt].
[IMGRG_data.txt]- A text file created by the [Final_Program.py]. It stores the values of pixels of various Images in a comma seperatef form.
[IMGRG_testdata.txt]- A text file creted by [Testing_Data_Creator.py].It stores the values of pixels of various Images in a comma seperated form.
[Testing_Data_Creator]- A python 3.6 program to just gather the pixels of the Grayscale Images and convert them to pixels and store them in [IMGRG_testdata.txt]. 
[Main_matlab_Program.m]- A MATLAB file to implement all the other MATLAB functions and finally performing the real work.



{Folder}
[Training_Set]- This folder contains another five folders which contain 1000 images for each digit from 1-5.
[Testing data]- This folder contains another five folders which contain 1000 images for each digit from 1-5.
9:08 PM 27-Nov-17

9:22 PM 27-Nov-17
{Update}:
Just ran the modelon the existing digits and it was 98.72% accurate for 100 iterations and 97.64% for 50 iterations. (lamda =0.1)
But the main point is that it tested the training data, now its time to make it test for new data.
For this I'll use another set of 5000 images(1000 of each type) and check whether the model was accurate or not.

9:37 PM 27-Nov-17
{Update}:
Just ran the model on the test dataset and it was 97.64% accurate for 50 iterations.(lamda =0.1) 
Mind you, the testing data is not as same as the training and still the model was accurate enough.

7:32 29-Nov-2017
{Update 1.1}
Just updated the documentation and comments on various files. This was done in order to make them more accurate according to my program requirements

7:41 PM 29-Nov-17
{Update}
Adding more traing data, now there are 9000images(1-9 digits)

7:57 PM 29-Nov-17
{Update 1.2}
Walking toward the version v1.2 (for v.1 check the Github profile)
The changes made in v1.1 are not made directly here, instead they are changed on the github page and then the files are downloaded and replaced

8:04 PM 29-Nov-17
{Update}:
Just ran the model and it showed 53.44% accuracy for 50iterations.Now i'll run the model for 100 iterations.

8:06 PM 29-Nov-17
{Update}
Found a blunder and fixed it.I forgot to change the value of [num_label] to 9.
Changed the value and found that the model is 93.33% accurate. Pretty Impressive. just i'll attempt to change the iterations to 100 and see what change does it make.

8:09 PM 29-Nov-17
{Update}:
Changed the value of iterations and found out that accuracy increased to 94.82%. for last time i'm just checking by changing the value to 150.

8:13 PM 29-Nov-17
{Update}:
Increased the value and got a higher accuracy percentage of 95.66. But at cost of time. For the time being.I'm going to keep the value of iterations to be 100. And now im going to increase the Data size.

8:28 PM 29-Nov-17
{Update 1.2.1}:
Increased the training data to maximum possible while keeping the testing data constant. The accuracy @iterations =100 was 92.67% pretty impressive,i must say. I think this could be the limit of logistic Regression.


9:12 PM 29-Nov-17
{Update 1.2}
The documentation has been improved.
Python files have become more responsive and informative to the console, with displaying the digit number while creating its data.
The model size has increased and now accomodate all the digits and given digits, except {0}. This would be provided in a later update.
The model has become less accurate the accuracy dropped from 98.72% to 94.82%, owing to the increased size of training data.
The model is now saved as 100 iterations as default. This was the demand of the increasing size of data and decreasing accuracy rate.
The final update would be uploaded to Githib Profile as Image_Recognition_v1.2.
The IMGRG data files will not be uploaded as they are very big in size and Github can't support them.

9:40 PM 29-Nov-17
{Update}
Thought of new update in the python files to automatically check whether the file exits and then delete them accordingly or else it with cause problems with MATLAB.
Also updating the MATLAB function to make the choice of [max_itr] variable in the main file.

1:50 PM 30-Nov-17
{Update}:
//Forgot to update log file due to illness, Now feeling good.
The python file update was great. I helped to clear the clutter and work project easily.
The next task i'm thinking is to combine the 2 python files and clutter them together.

2:32 PM 30-Nov-17
{Update}:
Added a [show_percentage] function to show the progress of data creation.This had the file more responsive.

1:39 AM 01-Dec-17
{Update 1.3}
Thr python file now show how much percentage of images are converted.
The max_itr variable is now added to [main_matlab_program] file so as to change it.
The python file now deletes the existing data file so as to avoid the overwriting and irregularities in the data.